AWSTemplateFormatVersion: "2010-09-09"
Description: Website Hosting for a UI

Parameters:
  Application:
    AllowedPattern: "[a-z0-9]+"
    Description: Lowercase application name used in S3 bucket name and as prefix for DNS entries
    Type: String
  CertificateArn:
    Description: ARN for Certificate that will match the Alias domain, must be in us-east-1
    Type: String
  Environment:
    AllowedPattern: "[a-z0-9]+"
    Description: Name for environment, must be lowercase
    Type: String
  PublicDomain:
    Description: DNS Domain in which subdomain will be created
    Type: String

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub ${Application}-${Environment}-${AWS::Region}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Resource: !Sub ${Bucket.Arn}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}
          - Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:PutObject
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:role/GitHubApplicationDeploymentRole
            Resource:
              - !Sub ${Bucket.Arn}
              - !Sub ${Bucket.Arn}/*

  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: !Sub Origin Access Control for ${Application}
        Name: !Sub OAC-${Application}
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  NoCacheResponseHeaderPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Comment: "Send Cache-Control: no-cache"
        CustomHeadersConfig:
          Items:
            - Header: Cache-Control
              Override: True
              Value: no-cache
        Name: !Sub ${AWS::StackName}-NoCache

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub ${Application}.${PublicDomain}
        CacheBehaviors:
          # Disable browser caching for index.html, but CloudFront will still cache until invalidated
          - CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed CachingOptimized policy
            PathPattern: /index.html
            ResponseHeadersPolicyId: !Ref NoCacheResponseHeaderPolicy
            TargetOriginId: UIBucket
            ViewerProtocolPolicy: redirect-to-https
        Comment: !Sub ${Application} UI
        CustomErrorResponses:
          - ErrorCachingMinTTL: 3600
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed CachingOptimized policy
          Compress: True
          TargetOriginId: UIBucket
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: True
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt Bucket.RegionalDomainName
            Id: UIBucket
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
            S3OriginConfig: {}
        PriceClass: PriceClass_100 # NA and EU only
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only

  IPv4AliasRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # Fixed HostedZoneId for all CloudFront distributions
      HostedZoneName: !Sub ${PublicDomain}.
      Name: !Sub ${Application}.${PublicDomain}
      Type: A

  IPv6AliasRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # Fixed HostedZoneId for all CloudFront distributions
      HostedZoneName: !Sub ${PublicDomain}.
      Name: !Sub ${Application}.${PublicDomain}
      Type: AAAA

Outputs:
  CloudFrontDistribution:
    Description: Id of CloudFront Distribution
    Value: !Ref CloudFrontDistribution
  DomainName:
    Description: Domain Name for accessing Distribution
    Value: !Ref IPv4AliasRecord
  S3Bucket:
    Description: Name of S3 Bucket
    Value: !Ref Bucket
